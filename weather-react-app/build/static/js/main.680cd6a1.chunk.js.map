{"version":3,"sources":["context/ThemeContext.js","utils/ReactAnalytics.js","components/loader/LoaderComponent.js","components/icon/IconComponent.js","components/header/HeaderComponent.js","components/footer/FooterComponent.js","App.js","serviceWorker.js","utils/LogRocketSetup.js","index.js"],"names":["ThemeContext","React","createContext","theme","toggleTheme","ThemeContextProvider","children","useState","setTheme","colorTheme","saveThemePreference","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","hour","moment","format","daynightChecker","Provider","value","selectedTheme","Event","category","action","label","emitGA","ReactGA","event","LoaderComponent","loaderText","useContext","className","IconComponent","iconType","HeaderComponent","href","class","aria-label","target","rel","width","height","viewBox","style","fill","color","position","top","border","left","transform","aria-hidden","d","transformOrigin","isEmpty","checked","icons","unchecked","onChange","FooterComponent","backgroundColor","title","role","onClick","HomeContainer","lazy","GA_ID","process","REACT_APP_GA_ID","initialize","App","fallback","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SENTRY_DSN","REACT_APP_SENTRY_DSN","Sentry","dsn","LOGROCKET_PROJECT_ID","REACT_APP_LOGROCKET_PROJECT_ID","LogRocket","init","setupLogRocketReact","getSessionURL","sessionURL","scope","setExtra","LogRocketSetup","publicURL","app","basename","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.680cd6a1.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport moment from 'moment-timezone'\nimport {Event} from '../utils/ReactAnalytics'\n\nconst ThemeContext = React.createContext({\n  theme: 'light',\n  toggleTheme: () => {}\n})\n\n// track theme toggles to GA\nconst emitGA = theme => {\n  Event({\n    category: 'Theme',\n    action: 'Toggle Theme',\n    label: theme\n  })\n}\n\nconst ThemeContextProvider = ({children}) => {\n  const [theme, setTheme] = useState('')\n  const colorTheme = theme === 'light' ? 'dark' : 'light'\n\n  const toggleTheme = () => {\n    const selectedTheme = theme === 'light' ? 'dark' : 'light'\n    emitGA(selectedTheme)\n    setTheme(selectedTheme)\n    saveThemePreference(selectedTheme)\n  }\n\n  const saveThemePreference = theme => {\n    localStorage.setItem('theme', JSON.stringify(theme))\n  }\n\n  const daynightChecker = () => {\n    const hour = moment().format('H')\n    if (hour >= 6 && hour < 18) {\n      setTheme('light')\n      saveThemePreference('light')\n    } else {\n      setTheme('dark')\n      saveThemePreference('dark')\n    }\n  }\n\n  useEffect(() => {\n    // set theme based on the time on initial application load and\n    // when there is no theme preference in the localStorage\n    if (!localStorage.getItem('theme')) {\n      daynightChecker()\n    } else {\n      setTheme(JSON.parse(localStorage.getItem('theme')))\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <ThemeContext.Provider value={{theme, colorTheme, toggleTheme}}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport {ThemeContext, ThemeContextProvider}\n","import ReactGA from 'react-ga'\n\nexport const Event = ({category, action, label}) => {\n  ReactGA.event({\n    category,\n    action,\n    label\n  })\n}\n\nexport const pageView = ({path}) => {\n  ReactGA.pageView(path)\n}\n","import React, {useContext} from 'react'\nimport './LoaderStyle.scss'\nimport {ThemeContext} from '../../context/ThemeContext'\nimport {PropTypes} from 'prop-types'\n\nconst LoaderComponent = ({loaderText}) => {\n  const {theme} = useContext(ThemeContext)\n  return (\n    <div className='flex flex-col w-full justify-center items-center'>\n      <div className='spinner'>\n        <div className='double-bounce1'></div>\n        <div className='double-bounce2'></div>\n      </div>\n      {loaderText && (\n        <div\n          className={`mx-auto text-center text-sm font-light text-${\n            theme === 'light' ? 'dark' : 'light'\n          }`}>\n          {loaderText}\n          <span className='text-2xl text-fade'>...</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default LoaderComponent\n\nLoaderComponent.propTypes = {\n  loaderText: PropTypes.string\n}\n","import React from 'react'\nimport {PropTypes} from 'prop-types'\nimport {FaSun, FaMoon} from 'react-icons/fa'\n\nconst IconComponent = ({iconType}) => {\n  return (\n    <div>\n      {iconType === 'light' ? (\n        <p className='text-toggle'>\n          <FaSun />\n        </p>\n      ) : (\n        <p className='text-toggle'>\n          <FaMoon />\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default IconComponent\n\nIconComponent.propTypes = {\n  iconType: PropTypes.string\n}\n","import React, {useContext} from 'react'\nimport Toggle from 'react-toggle'\nimport './ReactToggle.scss'\nimport {ThemeContext} from '../../context/ThemeContext'\nimport IconComponent from '../icon/IconComponent'\nimport {isEmpty} from 'lodash-es'\n\nconst HeaderComponent = () => {\n  const {theme, toggleTheme} = useContext(ThemeContext)\n\n  return (\n    <div className='flex justify-between items-center px-5 py-5'>\n      <div>\n        {/* <Link to='/'>\n          <img\n            src={`${AssetsSrcURL}/logo.png`}\n            alt='Weather React Logo'\n            title='Weather React'\n            className='h-12 w-12 object-contain object-center cursor-pointer'\n          />\n        </Link> */}\n        <a\n          href='https://github.com/sh-anna/'\n          class='github-corner'\n          aria-label='View source on GitHub'\n          target='_blank'\n          rel='noreferrer noopener'>\n          <svg\n            width='80'\n            height='80'\n            viewBox='0 0 250 250'\n            style={{\n              fill: '#292929',\n              color: '#fff',\n              position: 'absolute',\n              top: 0,\n              border: 0,\n              left: 0,\n              transform: 'scale(-1, 1)',\n            }}\n            aria-hidden='true'>\n            <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n            <path\n              d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\n              fill='currentColor'\n              style={{transformOrigin: '130px 106px'}}\n              class='octo-arm'></path>\n            <path\n              d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\n              fill='currentColor'\n              class='octo-body'></path>\n          </svg>\n        </a>\n      </div>\n      <div>\n        {/* below condition to avoid toggle glitch effect on page refresh */}\n        {!isEmpty(theme) ? (\n          <Toggle\n            checked={theme === 'light'}\n            icons={{\n              checked: <IconComponent iconType={'light'} />,\n              unchecked: <IconComponent iconType={'dark'} />,\n            }}\n            onChange={toggleTheme}\n          />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderComponent\n","import React, {useContext} from 'react'\nimport {ThemeContext} from '../../context/ThemeContext'\nimport moment from 'moment-timezone'\nimport {Event} from '../../utils/ReactAnalytics'\nimport {FaHeart, FaReact} from 'react-icons/fa'\n\nconst FooterComponent = () => {\n  const {theme, colorTheme} = useContext(ThemeContext)\n\n  const emitGA = (action, label) => {\n    Event({\n      category: 'Footer Links',\n      action,\n      label,\n    })\n  }\n  return (\n    <div\n      className={`text-${colorTheme} pb-3`}\n      style={{\n        backgroundColor: theme === 'dark' ? '#292929' : '#e8ebee',\n      }}>\n      <div\n        className={`flex flex-col text-center sm:flex sm:flex-row justify-around p-5 text-${colorTheme} text-sm`}>\n        {/* <p className='my-2 sm:my-0 w-full sm:w-1/3'>\n          <a\n            href='https://github.com/iamsainikhil/weather-react/'\n            target='_blank'\n            rel='noreferrer noopener'\n            className={`link z-0 hover:text-${theme}`}\n            onClick={() => emitGA('Visit GitHub', 'GitHub Link')}>\n            GitHub\n          </a>\n        </p> */}\n        <p className='flex flex-no-wrap justify-center items-center my-2 sm:my-0 w-full sm:w-1/2'>\n          Made with&nbsp;\n          <span\n            title='Love'\n            role='img'\n            aria-label='Love'\n            className='text-base text-heart'>\n            <FaHeart /> by Anna Sharipkin\n          </span>\n          &nbsp;using&nbsp;\n          <span\n            title='React'\n            role='img'\n            aria-label='React'\n            className='text-base text-react'>\n            <FaReact />\n          </span>\n        </p>\n        {/* <p className='my-2 sm:my-0 w-full sm:w-1/3'>\n          <Link to='/privacy-policy' className={`link z-0 hover:text-${theme}`}>\n            Privacy Policy\n          </Link>\n        </p> */}\n      </div>\n      <p className='mx-auto text-center text-sm'>\n        &copy; {moment().format('YYYY')}{' '}\n        <a\n          className={`link z-0 hover:text-${theme}`}\n          href='https://github.com/sh-anna'\n          target='_blank'\n          rel='noreferrer noopener'\n          onClick={() => emitGA('Visit Portfolio', 'Portfolio Link')}>\n          Anna Sharipkin\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default FooterComponent\n","import React, {useContext, Suspense, lazy} from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport {ThemeContext} from './context/ThemeContext'\nimport HeaderComponent from './components/header/HeaderComponent'\nimport FooterComponent from './components/footer/FooterComponent'\nimport LoaderComponent from './components/loader/LoaderComponent'\nimport ReactGA from 'react-ga'\n\nconst HomeContainer = lazy(() => import('./containers/home/HomeContainer'))\n// const PrivacyPolicyComponent = lazy(() =>\n//   import('./components/privacy-policy/PrivacyPolicyComponent')\n// )\n\nconst GA_ID = process.env.REACT_APP_GA_ID\n\n// reactGA initialization\nReactGA.initialize(`${GA_ID}`)\n\nconst App = () => {\n  const {theme} = useContext(ThemeContext)\n\n  return (\n    <div className={` bg-${theme} tracking-wider border-box wrapper`}>\n      <div>\n        <HeaderComponent />\n      </div>\n      <div>\n        <Suspense\n          fallback={<LoaderComponent loaderText='Loading components' />}>\n          <Switch>\n            <Route path='/' exact component={HomeContainer}></Route>\n            {/* <Route\n              path='/privacy-policy'\n              exact\n              component={PrivacyPolicyComponent}></Route> */}\n          </Switch>\n        </Suspense>\n      </div>\n      <div>\n        <FooterComponent />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import LogRocket from 'logrocket'\nimport setupLogRocketReact from 'logrocket-react'\nimport * as Sentry from '@sentry/browser'\n\nconst logRocketSetup = () => {\n  // initiate SENTRY\n  const SENTRY_DSN = process.env.REACT_APP_SENTRY_DSN\n  Sentry.init({dsn: `${SENTRY_DSN}`})\n\n  // initiate LogRocket\n  const LOGROCKET_PROJECT_ID = process.env.REACT_APP_LOGROCKET_PROJECT_ID\n  LogRocket.init(`${LOGROCKET_PROJECT_ID}`)\n  setupLogRocketReact(LogRocket)\n\n  // setup LogRocket and Sentry\n  LogRocket.getSessionURL((sessionURL) => {\n    Sentry.configureScope((scope) => {\n      scope.setExtra('sessionURL', sessionURL)\n    })\n  })\n}\n\nexport default logRocketSetup\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {ThemeContextProvider} from './context/ThemeContext'\nimport App from './App'\nimport './styles/main.css'\nimport * as serviceWorker from './serviceWorker'\nimport LogRocketSetup from './utils/LogRocketSetup'\n\n// setup LogRocket & Sentry\nLogRocketSetup()\n\n\n// important change after recent upgrade of react-scripts to ^3.4.0\nconst publicURL = process.env.PUBLIC_URL ?? '/'\n\nconst app = (\n  <Router basename={publicURL}>\n    <ThemeContextProvider>\n      <App />\n    </ThemeContextProvider>\n  </Router>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}